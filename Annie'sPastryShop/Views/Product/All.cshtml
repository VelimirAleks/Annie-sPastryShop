@model IEnumerable<ProductViewModel>

<h2>Products</h2>

<div class="row mb-3">
    <div class="col-md-4">
        <form asp-action="Search" asp-controller="Product" method="get">
            <div class="input-group">
                <input type="text" class="form-control search-bar" placeholder="Search products" name="searchTerm">
                <button class="btn btn-custom-pink_grey" type="submit">Search</button>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <form id="filterForm" asp-action="Filter" asp-controller="Product" method="get">
            <div class="input-group">
                <label for="filterSelect" class="input-group-text filter-letter">Sort By</label>
                <select class="form-select" id="filterSelect" name="filterType">
                    <option value="priceAscending" selected="@((string)ViewBag.SelectedFilterType == "priceAscending")">Price: Low to High</option>
                    <option value="priceDescending" selected="@((string)ViewBag.SelectedFilterType == "priceDescending")">Price: High to Low</option>
                    <option value="creationDateDescending" selected="@((string)ViewBag.SelectedFilterType == "creationDateDescending")">Newest</option>
                    <option value="alphabetical" selected="@((string)ViewBag.SelectedFilterType == "alphabetical")">Alphabetical</option>
                </select>
                <button class="btn btn-custom-pink_grey" type="submit">Apply Sorting</button>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <form id="categoryFilterForm" asp-action="FilterByCategory" asp-controller="Product" method="get">
            <div class="input-group">
                <label for="categoryFilterSelect" class="input-group-text filter-letter">Category</label>
                <select class="form-select" id="categoryFilterSelect" name="categoryId" onchange="rememberCategoryName()">
                    <option value="0">All Categories</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
                <button class="btn btn-custom-pink_grey" type="submit">Apply Filter</button>
            </div>
        </form>
    </div>
</div>

<div class="row">
    @foreach (var product in Model)
    {
        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="@product.ImageUrl" class="card-img-top" alt="Product Image" style="height:370px;">
                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="price" style="font-size: smaller;">Price: $@product.Price</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-custom-pink_grey">Details</a>
                        <form id="addToCartForm-@product.Id" asp-action="AddToCart" asp-controller="Cart" method="post">
                            <input type="hidden" name="productId" value="@product.Id" />
                            <input type="hidden" name="quantity" value="1" />
                            <button type="button" class="btn btn-custom-pink_grey" onclick="addToCart('@product.Id')">Add to Cart</button>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $('#filterSelect').change(function () {
            $('#filterForm').submit();
        });

        $('#categoryFilterSelect').change(function () {
            $('#categoryFilterForm').submit();
        });
    </script>
    <script>
        document.getElementById("categoryFilterSelect").addEventListener("change", function () {
            var selectedCategoryName = this.options[this.selectedIndex].text;
            localStorage.setItem("selectedCategoryName", selectedCategoryName);
        });
        document.addEventListener("DOMContentLoaded", function () {
            var selectedCategoryName = localStorage.getItem("selectedCategoryName");
            if (selectedCategoryName) {
                var selectElement = document.getElementById("categoryFilterSelect");
                var options = selectElement.options;
                for (var i = 0; i < options.length; i++) {
                    if (options[i].text === selectedCategoryName) {
                        selectElement.selectedIndex = i;
                        break;
                    }
                }
            }
        });
    </script>
    <script>
        function addToCart(productId) {
            var formId = 'addToCartForm-' + productId;
            var form = document.getElementById(formId);
            var formData = new FormData(form);

            var xhr = new XMLHttpRequest();
            xhr.open('POST', form.action, true);
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 400) {

                    console.log('Product added to cart successfully');
                    updateCartCounter(); 
                } else {
                    console.error('Failed to add product to cart');
                }
            };
            xhr.onerror = function () {
                console.error('Failed to send request');
            };
            xhr.send(formData);
        }

        function updateCartCounter() {
            var xhr = new XMLHttpRequest();
            xhr.open('GET', '/Cart/GetCartItemCount', true);
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 400) {
                    var cartCounterElement = document.querySelector('.cart-counter');
                    if (cartCounterElement) {
                        cartCounterElement.textContent = xhr.responseText;
                    }
                } else {
                    console.error('Failed to get cart item count');
                }
            };
            xhr.onerror = function () {
                console.error('Failed to send request');
            };
            xhr.send();
        }
    </script>
}